线程和进程的区别？
进程：相对于操作系统而言，每个独立运行的软件将会开启一个操作系统级别的堵路程序，我们称之为进程
线程：相对于一个进程（软件）而言，在这个软件里每一个独立运行的分支成为一个线程



程序里创建多线程？

多线程意义？（增加程序吞吐量）

多线程不是必须的？视情况而定


任何一个java程序至少有一个线程，它是main线程

主线程和其他线程的关系，主线程是开启其他线程的必要通道


如何创建多线程？
1.自定义一个类继承Thread类，重写里面的run方法

2.自定义一个类实现Runnable接口，重写里面的run方法

3.匿名内部类方式创建一个线程


多线程运行的结果固定吗？结果又规律吗？

多线程的运行结果不确定，不规律。

多线程运行是抢占式的。

线程的状态：

1.新建  2.运行 3.阻塞 4.死亡

1.新建指的是刚刚new好一个线程对象
Thread t=new Thread();//t现在是新建状态

2.新建好的线程调用了start方法，进入运行状态
t.start();//调用了start方法处于运行状态

3.线程代码运行到了那些阻塞方法的时候，则进入阻塞状态
比如线程中有io代码，或者说遇到了sleep方法

4.线程代码执行完毕了，则进入死亡状态



线程的常用方法
sleep，控制线程睡眠
sleep方法在哪个线程里执行是让哪个线程睡眠



join方法，让步方法。(join可以做线程之间简单调度)
如果A线程调用了B线程的join,那么A让步B


多线程如果同时运行不涉及到公共资源，这种情况是最好的状态

如果线程同时运行涉及到访问同一个资源，这种情况成为并发

并发中容易出现数据不一致的现象
